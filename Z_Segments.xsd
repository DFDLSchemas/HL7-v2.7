<?xml version="1.0" encoding="UTF-8"?>
<!--
****************************************************************** 
* 
* The schemas contained in this document are reproduced with the express permission of 
* Health Level Seven (R) International. ALL RIGHTS RESERVED.
*  
* The schemas contain material derived from HL7 standards. 
* HL7 standards can be obtained from the HL7 website: www.HL7.org
*
* Health Level Seven International and IBM hereby grant permission, to those obtaining 
* a copy of these materials, to use, copy and modify the materials solely for use with DFDL processors.
* THESE MATERIALS ARE PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND.  
*
* Copyright © 1999-2011, Health Level Seven.
*
* © Copyright International Business Machines Corporation, 2013. 
*
************************************************************************
*
* Version 1.0 	Z_Segments.xsd
*
* This DFDL schema is one of a set of schemas that model HL7 v2.7.
* It provides an extension point for modeling user-defined Z segments.   
* 
* To use the schema in another HL7 DFDL schema: 
*   <xs:include schemaLocation="Z_Segments.xsd"/>
*
************************************************************************* 
-->
<xsd:schema targetNamespace="urn:hl7-org:v2xml" xmlns="urn:hl7-org:v2xml" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/" xmlns:ibmSchExtn="http://www.ibm.com/schema/extensions" xmlns:ibmhl7="http://www.ibm.com/dfdl/HL7Format" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsd:import namespace="http://www.ibm.com/dfdl/HL7Format" schemaLocation="HL7Format.xsd"/>
    <xsd:include schemaLocation="fields.xsd"/>
	
	<xsd:annotation>
		<xsd:appinfo source="http://www.ogf.org/dfdl/">
			<dfdl:format ref="ibmhl7:HL7Format"/>
		</xsd:appinfo>
	</xsd:annotation>

  <xsd:group name="Z_Group">
    <xsd:choice>
     <!-- Add user-defined segments in front of catch-all segment Zxx --> 
      <xsd:element maxOccurs="1" minOccurs="1" ref="Zxx"/>
    </xsd:choice>
  </xsd:group>
  
  <!-- Do not remove Zxx - its acts as a catch-all for any unmodeled segments -->
  
    <xsd:complexType name="Zxx.CONTENT">
        <xsd:sequence dfdl:ref="ibmhl7:HL7Segment" dfdl:separatorPosition="infix">
            <xsd:element maxOccurs="unbounded" minOccurs="0" name="Remainder" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>
    <xsd:element dfdl:initiator="" dfdl:ref="ibmhl7:HL7SegmentTerminator" name="Zxx" type="Zxx.CONTENT"/>

	<!-- Add a complex type and element for each user-defined segment -->
	 
</xsd:schema>